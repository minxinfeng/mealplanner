<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.threeone.mealplanner.mapper.FriendInfoMapper" >
  <resultMap id="BaseResultMap" type="com.threeone.mealplanner.model.entity.FriendInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="friendId" property="friendid" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, userId, friendId, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from friendinfo
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from friendinfo
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.threeone.mealplanner.model.entity.FriendInfo" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into friendinfo (id, userId, friendId, 
      status)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{friendid,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.threeone.mealplanner.model.entity.FriendInfo" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into friendinfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      id,
      <if test="userid != null" >
        userId,
      </if>
      <if test="friendid != null" >
        friendId,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=INTEGER},
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="friendid != null" >
        #{friendid,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.threeone.mealplanner.model.entity.FriendInfo" >
    update friendinfo
    <set >
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="friendid != null" >
        friendId = #{friendid,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.threeone.mealplanner.model.entity.FriendInfo" >
    update friendinfo
    set userId = #{userid,jdbcType=INTEGER},
      friendId = #{friendid,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getFriendRequestIdsByStatus" resultType="java.lang.Integer">
    select userId
    from friendinfo
    where friendId = #{friendId,jdbcType=INTEGER} and status = #{status,jdbcType=INTEGER}
  </select>
  
  <select id="getAllFriendIds" resultType="java.lang.Integer">
    SELECT distinct(userId) as id FROM mealplanner.friendinfo where friendId=#{userId,jdbcType=INTEGER} and status = 1
	union 
	select distinct(friendId) as id from mealplanner.friendinfo where userId=#{userId,jdbcType=INTEGER} and status = 1
	order by id
  </select>
  
  <update id="handleFriendRequest" >
    update friendinfo
    set status = #{status,jdbcType=INTEGER}
    where userId = #{userId,jdbcType=INTEGER} and friendId = #{friendId,jdbcType=INTEGER}
  </update>
  
</mapper>