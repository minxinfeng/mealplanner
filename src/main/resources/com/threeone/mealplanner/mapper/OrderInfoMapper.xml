<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.threeone.mealplanner.mapper.OrderInfoMapper" >
  <resultMap id="BaseResultMap" type="com.threeone.mealplanner.model.entity.OrderInfo" >
    <id column="orderId" property="orderid" jdbcType="INTEGER" />
    <result column="mealId" property="mealid" jdbcType="INTEGER" />
    <result column="restId" property="restid" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="contactInfo" property="contactinfo" jdbcType="VARCHAR" />
    <result column="actualPeopleNum" property="actualpeoplenum" jdbcType="INTEGER" />
    <result column="menuIds" property="menuids" jdbcType="VARCHAR" />
    <result column="mealTime" property="mealtime" jdbcType="TIMESTAMP" />
    <result column="seatId" property="seatid" jdbcType="INTEGER" />
    <result column="operationUserId" property="operationuserid" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    orderId, mealId, restId, userId, contactInfo, actualPeopleNum, menuIds, mealTime, 
    seatId, operationUserId, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from orderinfo
    where orderId = #{orderid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from orderinfo
    where orderId = #{orderid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.threeone.mealplanner.model.entity.OrderInfo" >
    insert into orderinfo (orderId, mealId, restId, 
      userId, contactInfo, actualPeopleNum, 
      menuIds, mealTime, seatId, 
      operationUserId, status)
    values (#{orderid,jdbcType=INTEGER}, #{mealid,jdbcType=INTEGER}, #{restid,jdbcType=INTEGER}, 
      #{userid,jdbcType=INTEGER}, #{contactinfo,jdbcType=VARCHAR}, #{actualpeoplenum,jdbcType=INTEGER}, 
      #{menuids,jdbcType=VARCHAR}, #{mealtime,jdbcType=TIMESTAMP}, #{seatid,jdbcType=INTEGER}, 
      #{operationuserid,jdbcType=INTEGER}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.threeone.mealplanner.model.entity.OrderInfo" >
    insert into orderinfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderid != null" >
        orderId,
      </if>
      <if test="mealid != null" >
        mealId,
      </if>
      <if test="restid != null" >
        restId,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="contactinfo != null" >
        contactInfo,
      </if>
      <if test="actualpeoplenum != null" >
        actualPeopleNum,
      </if>
      <if test="menuids != null" >
        menuIds,
      </if>
      <if test="mealtime != null" >
        mealTime,
      </if>
      <if test="seatid != null" >
        seatId,
      </if>
      <if test="operationuserid != null" >
        operationUserId,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderid != null" >
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="mealid != null" >
        #{mealid,jdbcType=INTEGER},
      </if>
      <if test="restid != null" >
        #{restid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="contactinfo != null" >
        #{contactinfo,jdbcType=VARCHAR},
      </if>
      <if test="actualpeoplenum != null" >
        #{actualpeoplenum,jdbcType=INTEGER},
      </if>
      <if test="menuids != null" >
        #{menuids,jdbcType=VARCHAR},
      </if>
      <if test="mealtime != null" >
        #{mealtime,jdbcType=TIMESTAMP},
      </if>
      <if test="seatid != null" >
        #{seatid,jdbcType=INTEGER},
      </if>
      <if test="operationuserid != null" >
        #{operationuserid,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.threeone.mealplanner.model.entity.OrderInfo" >
    update orderinfo
    <set >
      <if test="mealid != null" >
        mealId = #{mealid,jdbcType=INTEGER},
      </if>
      <if test="restid != null" >
        restId = #{restid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="contactinfo != null" >
        contactInfo = #{contactinfo,jdbcType=VARCHAR},
      </if>
      <if test="actualpeoplenum != null" >
        actualPeopleNum = #{actualpeoplenum,jdbcType=INTEGER},
      </if>
      <if test="menuids != null" >
        menuIds = #{menuids,jdbcType=VARCHAR},
      </if>
      <if test="mealtime != null" >
        mealTime = #{mealtime,jdbcType=TIMESTAMP},
      </if>
      <if test="seatid != null" >
        seatId = #{seatid,jdbcType=INTEGER},
      </if>
      <if test="operationuserid != null" >
        operationUserId = #{operationuserid,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where orderId = #{orderid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.threeone.mealplanner.model.entity.OrderInfo" >
    update orderinfo
    set mealId = #{mealid,jdbcType=INTEGER},
      restId = #{restid,jdbcType=INTEGER},
      userId = #{userid,jdbcType=INTEGER},
      contactInfo = #{contactinfo,jdbcType=VARCHAR},
      actualPeopleNum = #{actualpeoplenum,jdbcType=INTEGER},
      menuIds = #{menuids,jdbcType=VARCHAR},
      mealTime = #{mealtime,jdbcType=TIMESTAMP},
      seatId = #{seatid,jdbcType=INTEGER},
      operationUserId = #{operationuserid,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where orderId = #{orderid,jdbcType=INTEGER}
  </update>
</mapper>